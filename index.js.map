{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\n\nconst API_KEY = '41712066-bd7b5e249df7a86bd45ef70ea';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const BASE_PARAMS = {\n  key: API_KEY,\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: true,\n  per_page: 15,\n};\n\nexport const fetchImages = async (query, page = 1) => {\n  const q = (query ?? '').trim();\n\n  if (q === '') {\n    iziToast.info({\n      message: 'Sorry, enter a word to search!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  const param = new URLSearchParams({ ...BASE_PARAMS, q, page });\n  const url = `${BASE_URL}?${param.toString()}`;\n  const response = await axios.get(url);\n\n  return response.data;\n};\n","export const createCard = img => {\n  return `<li class=\"gallery-item\">\n    <a class=\"gallery-link\" href=\"${img.largeImageURL}\">\n      <img\n        class=\"gallery-image\"\n        src=\"${img.webformatURL}\"\n        alt=\"${img.tags}\"\n        />\n    </a>\n    <div class=\"container-description-img\">\n        <div class=\"description-item\">\n          <span class=\"img-label\">likes</span>\n          <span class=\"img-value\">${img.likes}</span>\n        </div>\n        <div class=\"description-item\">\n          <span class=\"img-label\">views</span>\n          <span class=\"img-value\">${img.views}</span>\n        </div>\n         <div class=\"description-item\">\n          <span class=\"img-label\">comments</span>\n          <span class=\"img-value\">${img.comments}</span>\n        </div>\n           <div class=\"description-item\">\n          <span class=\"img-label\">downloads</span>\n          <span class=\"img-value\">${img.downloads}</span>\n        </div>\n    </div>\n  </li>\n  `;\n};\n","// import iziToast from 'izitoast';\n// import SimpleLightbox from 'simplelightbox';\n\n// import { fetchImages } from './js/pixabay-api';\n// import { createCard } from './js/render-functions';\n// import { BASE_PARAMS } from './js/pixabay-api';\n\n// const refs = {\n//   listImg: document.querySelector('.gallery'),\n//   formSearch: document.querySelector('.form'),\n//   loader: document.querySelector('.loader'),\n//   loadMore: document.querySelector('.js-load-more'),\n//   observer: document.querySelector('.observer'),\n// };\n\n// let inputValue = null;\n// let page = null;\n// refs.loader.style.display = 'none';\n// const perPage = BASE_PARAMS.per_page;\n\n// const lightbox = new SimpleLightbox('.gallery a', {\n//   captionsData: 'alt',\n//   captionDelay: 250,\n// });\n\n// const onFormSearchSubmit = async e => {\n//   e.preventDefault();\n//   inputValue = e.target.elements.search.value;\n//   page = 1;\n\n//   if (!inputValue) return;\n\n//   refs.loader.style.display = 'block';\n\n//   try {\n//     const res = await fetchImages(inputValue);\n\n//     if (!res.hits.length) {\n//       iziToast.error({\n//         message:\n//           'Sorry, there are no images matching your search query. Please try again!',\n//         position: 'topRight',\n//       });\n//       refs.listImg.innerHTML = '';\n//       refs.formSearch.reset();\n//       refs.loadMore.classList.add('is-hiden');\n//       return;\n//     }\n\n//     if (res.hits.length < res.total) {\n//       refs.loadMore.classList.remove('is-hiden');\n//     }\n\n//     const card = res.hits.map(card => createCard(card)).join('');\n//     refs.listImg.innerHTML = card;\n//     refs.formSearch.reset();\n//     lightbox.refresh();\n//   } catch (err) {\n//     console.log(err.status);\n//   } finally {\n//     refs.loader.style.display = 'none';\n//   }\n// };\n\n// const onLoadMoreSubmit = async e => {\n//   e.preventDefault();\n//   page++;\n//   refs.loader.style.display = 'block';\n//   try {\n//     const res = await fetchImages(inputValue, page);\n//     const card = res.hits.map(card => createCard(card)).join('');\n//     refs.listImg.insertAdjacentHTML('beforeend', card);\n\n//     lightbox.refresh();\n\n//     const heightImg = document\n//       .querySelector('.gallery-item')\n//       .getBoundingClientRect().height;\n\n//     window.scrollBy({\n//       top: heightImg * 2,\n//       behavior: 'smooth',\n//     });\n\n//     const totalPages = Math.ceil(res.totalHits / perPage);\n//     if (page >= totalPages) {\n//       refs.loadMore.classList.add('is-hiden');\n//       iziToast.info({\n//         message: `We're sorry, but you've reached the end of search results.`,\n//         position: 'topRight',\n//       });\n//     }\n//   } catch (err) {\n//     console.log(err.status);\n//   } finally {\n//     refs.loader.style.display = 'none';\n//   }\n// };\n\n// refs.formSearch.addEventListener('submit', onFormSearchSubmit);\n// refs.loadMore.addEventListener('click', onLoadMoreSubmit);\n\n/////////////////////////////////--------SCROLL---------///////////////////////////////////////////\n\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\n\nimport { fetchImages } from './js/pixabay-api';\nimport { createCard } from './js/render-functions';\nimport { BASE_PARAMS } from './js/pixabay-api';\n\nconst refs = {\n  listImg: document.querySelector('.gallery'),\n  formSearch: document.querySelector('.form'),\n  loader: document.querySelector('.loader'),\n  observe: document.querySelector('.observer'),\n};\n\nlet inputValue = null;\nlet page = null;\nrefs.loader.style.display = 'none';\nconst perPage = BASE_PARAMS.per_page;\n\nconst lightbox = new SimpleLightbox('.gallery a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});\n\nlet observerOptions = {\n  root: null,\n  rootMargin: '0px', // No extra margin\n  threshold: 0.01, // Trigger when 1% of the image is visible\n};\nconst imageObserver = new IntersectionObserver(\n  colbeckObserver,\n  observerOptions\n);\n\nconst onFormSearchSubmit = async e => {\n  e.preventDefault();\n  inputValue = e.target.elements.search.value;\n  page = 1;\n\n  if (!inputValue) return;\n\n  refs.loader.style.display = 'block';\n\n  try {\n    const res = await fetchImages(inputValue);\n\n    if (!res.hits.length) {\n      iziToast.error({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n        position: 'topRight',\n      });\n      refs.listImg.innerHTML = '';\n      refs.formSearch.reset();\n      return;\n    }\n\n    const card = res.hits.map(card => createCard(card)).join('');\n    refs.listImg.innerHTML = card;\n    refs.formSearch.reset();\n    lightbox.refresh();\n\n    imageObserver.observe(refs.observe);\n  } catch (err) {\n    console.log(err.status);\n  } finally {\n    refs.loader.style.display = 'none';\n  }\n};\n\nrefs.formSearch.addEventListener('submit', onFormSearchSubmit);\n\nasync function colbeckObserver(entries) {\n  if (entries[0].isIntersecting) {\n    page++;\n    refs.loader.style.display = 'block';\n\n    try {\n      const res = await fetchImages(inputValue, page);\n      const card = res.hits.map(card => createCard(card)).join('');\n      refs.listImg.insertAdjacentHTML('beforeend', card);\n\n      lightbox.refresh();\n\n      const totalPages = Math.ceil(res.totalHits / perPage);\n      if (page === totalPages) {\n        imageObserver.unobserve(refs.observe);\n        iziToast.info({\n          message: `We're sorry, but you've reached the end of search results.`,\n          position: 'topRight',\n        });\n      }\n    } catch (err) {\n      console.log(err.status);\n    } finally {\n      refs.loader.style.display = 'none';\n    }\n  }\n}\n"],"names":["API_KEY","BASE_URL","BASE_PARAMS","fetchImages","query","page","q","iziToast","param","url","axios","createCard","img","refs","inputValue","perPage","lightbox","SimpleLightbox","observerOptions","imageObserver","colbeckObserver","onFormSearchSubmit","e","res","card","err","entries","totalPages"],"mappings":"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"}